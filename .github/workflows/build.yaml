name: Build Pipeline

on:
  push:
    branches: [ "main" ]
    tags: [ "v**" ]
  pull_request:
    branches: [ "main" ]

permissions: write-all

jobs:
  build:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          cache: 'gradle'
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle to generate and submit dependency graphs
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: generate-and-submit
      - name: Build with Gradle
        run: ./gradlew build testCodeCoverageReport sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Extract version from Gradle
        id: version
        run: |
          VERSION=$(grep '^version\s*=' build.gradle.kts | sed -E 's/version\s*=\s*"([^"]+)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      #add if statements
      - name: Build Docker image
        run: docker build -t ghcr.io/osgp/protocol-adapter-oslp-mikronika:${{ steps.version.outputs.version }} .
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push Docker image
        run: docker push ghcr.io/osgp/protocol-adapter-oslp-mikronika:${{ steps.version.outputs.version }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
